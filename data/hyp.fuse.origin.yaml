# Hyperparameters for COCO training from scratch
# python train.py --batch 40 --cfg yolov5m.yaml --weights '' --data coco.yaml --img 640 --epochs 300
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials


lr0: 0.0001  # initial learning rate (SGD=1E-2, Adam=1E-3)
lrf: 0.01  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.9 # 0.937  # SGD momentum/Adam beta1
weight_decay: 0.000  # optimizer weight decay 5e-4
warmup_epochs: 0.0  # warmup epochs (fractions ok)
warmup_momentum: 0.8  # warmup initial momentum
warmup_bias_lr: 0.1  # warmup initial bias lr
cont_lr: .000001  # low resolution content loss gain
seam_lr: 2.  # low resolution seam loss gain
cont_hr: .000001  # high resolution content loss gain
seam_hr: 2.  # high resolution seam loss gain
loss_lr: 100.  # low resolution total loss gain
loss_hr: 1.  # high resolution total loss gain
consistency: 1.  # consistency loss gain
hsv_h: 0.015  # image HSV-Hue augmentation (fraction)
hsv_s: 0.2  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.15  # image HSV-Value augmentation (fraction)
degrees: 0. #05  # image rotation (+/- deg)
translate: 0.1  # image translation (+/- fraction)
scale: 0.1  # image scale (+/- gain)
shear: 0 #.01  # image shear (+/- deg)
perspective: 0 #.0005  # image perspective (+/- fraction), range 0-0.001
flipud: 0.  # image flip up-down (probability)
fliplr: 0.  # image flip left-right (probability)
